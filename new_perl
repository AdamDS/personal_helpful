#!/bin/bash
#a bash script to create a template perl script
#11 October 2014 - Adam D Scott

usage="new_perl <new perl script> #number of inputs#"

#author of perl script
name="Adam D Scott"

if [ $# -gt 1 ]; then
#"shebang" for perl
	file=$1
	echo "#!/usr/bin/perl" > $file
#file creation & authorship
	echo -n "#" >> $file
	timestamp=$(date "+%d %B %Y")
	echo -n "$timestamp" >> $file
	echo " - $name - " >> $file
	echo "" >> $file
#package use
	echo "use strict;" >> $file
	echo "use warnings;" >> $file
	echo "" >> $file
	echo "use IO::File;" >> $file
	echo "use FileHandle;" >> $file
	echo "" >> $file
#perl script usage
	echo -n "my \$usage = 'perl $file " >> $file
	if [ $2 > 0 ]; then
		i=0
		while [ $i -lt $2 ]; do
			echo -n "<input$((i+1))> " >> $file
			i=$((i+1))
		done
		echo "" >> $file
	fi
	echo "';" >> $file
	echo "" >> $file
#argument check
	if [ $2 -lt 1 ]; then
		argc=0
	else
		argc=$2
	fi
	echo "die \$usage , unless @ARGV == $argc;" >> $file
#if arguments in
	if [ $2 -gt 0 ]; then
		echo -n "my ( " >> $file
		i=0
		while [ $i -lt $2 ]; do
			if [ $i == $(($2-1)) ]; then
				echo -n "\$input$((i+1)) " >> $file
			else
				echo -n "\$input$((i+1)) , " >> $file
			fi
			i=$((i+1))
		done
		echo ") = @ARGV;" >> $file
		echo "" >> $file
#assume first input is a file to read
		echo "my \$IN1 = FileHandle->new( \"\$input1\" , \"r\" );" >> $file
		echo "if ( not defined \$IN1 ) { die \"ADSERROR: Could not open/read \$input1\\n\"; }" >> $file
		if [ $2 -gt 0 ]; then
			echo "" >> $file
			echo "my \$OUT = FileHandle->new( \"\$input2\" , \"w\" );" >> $file
			echo "if ( not defined \$OUT ) { die \"ADSERROR: Could not open/write \$input2\\n\"; }" >> $file
		fi
		echo "" >> $file
		#echo "open ( IN1 , \"<\$input1\" ) or die \"Cannot open \$input1: \$!\";" >> $file
		echo "my @cols;" >> $file
		echo "while ( my \$line = <\$IN1> ) {" >> $file
		echo "	chomp( \$line );" >> $file
		echo "	my @line = split( \"\\t\" , \$line );" >> $file
		echo "	if ( \$line =~ /asdf/ ) {" >> $file
		echo "		my \$i = 0;" >> $file
		echo "		my %cols = map{ ( \$_ , \$i++ ) } @line;" >> $file
		echo "		unless(	defined( \$cols{\"a\"} )" >> $file
		echo "			and defined( \$cols{\"b\"} ) ) {" >> $file
		echo "			die \"Not a valid input1 file!\\n\";" >> $file
		echo "		}" >> $file
		echo "		@cols = (	\$cols{\"a\"} ," >> $file
		echo "					\$cols{\"b\"} );" >> $file
		echo "	} else {" >> $file
		echo "" >> $file
		echo "	}" >> $file
		echo "}" >> $file
		#echo "close IN1;" >> $file
		echo "\$IN1->close();" >> $file
		if [ $2 -gt 0 ]; then
			echo "\$OUT->close();" >> $file
		fi
	fi
else
	echo $usage
fi
